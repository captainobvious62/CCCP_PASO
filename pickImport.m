% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/geovault-00/rlwalker/MATLAB/SAFOD/templates_wPicks.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2014/11/19 13:59:45

% Initialize variables.
filename = 'templates_wPicks.txt';
delimiter = ' ';

% Format string for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: text (%s)
%   column9: text (%s)
%	column10: text (%s)
%   column11: text (%s)
%	column12: text (%s)
%   column13: text (%s)
%	column14: text (%s)
%   column15: text (%s)
%	column16: text (%s)
%   column17: text (%s)
%	column18: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%f%f%f%f%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

% Open the text file.
fileID = fopen(filename,'r');

% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true,  'ReturnOnError', false);

% Close the text file.
fclose(fileID);

% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

% Create output variable
dataArray([2, 3, 4, 5, 6, 7]) = cellfun(@(x) num2cell(x), dataArray([2, 3, 4, 5, 6, 7]), 'UniformOutput', false);
picks = [dataArray{1:end-1}];
% Clear temporary variables
headers = zeros(length(picks(:,1)),1);
for i = 1:length(picks(:,1))
    str2double(picks{i,1});
    headers(i,1) = ~isnan(str2double(picks{i,1})) * i;
end
headers(headers ==0) = [];

template_list = cell(1,length(headers)-2);

for i= 1:length(headers) - 2
    template_list{i} = picks(headers(i):headers(i+1)-1,:);
end
%Convert read data into a format for the CC Program

for k = 1:length(template_list)
    template = template_list{k};
    templateData = struct();
    for i = 2:length(template(:,1))
        if strcmp(template(i,1),template(i-1,1)) == 0
            templateData(i).station = template{i,1};
            templateData(i).network = [];
            templateData(i).template = sprintf('BP%d',k);
            templateData(i).trigger = 'S';
            templateData(i).channel_list = [];
            templateData(i).freq = [];
            templateData(i).location = '*';
        end
        code = char(template(i,8));
        if code(2) == 'P'
            templateData(i).pWaveArrival = sprintf('%d %02d-%02d %02d:%02d:%07.4f',template{i,2},template{i,3},template{i,4},template{i,5},template{i,6},template{i,7});
        elseif code(2) == 'S'
            templateData(i).sWaveArrival = sprintf('%d %02d-%02d %02d:%02d:%07.4f',template{i,2},template{i,3},template{i,4},template{i,5},template{i,6},template{i,7});
            for j = 2:length(headers)
                if strcmp(template{j,1},template{i,1}) == 1
                    templateData(j).sWaveArrival = templateData(i).sWaveArrival;
                end
            end
        end
    end
    
    nulls = extractfield(templateData,'station');
    nullcount = zeros(length(nulls),1);
    for j = 1:length(nulls);
        nullcount(j) = ~isempty(nulls{j})*j;
    end
    nullcount(nullcount == 0) = [];
    templateData = templateData(nullcount');
    
    
    for j = 1:length(templateData)
        if j <= length(templateData);
            if isempty(templateData(j).pWaveArrival) == 1
                templateData(j) = [];
            elseif isempty(templateData(j).sWaveArrival) == 1
                templateData(j) = [];
            end
        end
    end
    for j = length(templateData):-1:1
        if j <= length(templateData);
            if isempty(templateData(j).pWaveArrival) == 1
                templateData(j) = [];
            elseif isempty(templateData(j).sWaveArrival) == 1
                templateData(j) = [];
            end
        end
    end
    
    
    
    % PASO High Res Settings
    
    for j = 1:length(templateData)
        templateData(j).network = 'BP';
        templateData(j).channel_list = {'DP2'  'DP3'  'DP1'};
        templateData(j).freq = 250;
    end
    
    template_list{k} = templateData;
end
template_names = cell(1,length(template_list));
for i = 1:length(template_list)
    template_names{i} = sprintf('BP%d',i);
end





for i = 1:length(template_list)
    disp('template')
    disp(i)
    k = length(template_list{i});
    for j = 1:length(template_list{i})
        disp('station')
        disp(j)
        disp('reduced station')
        disp(k)
        if j <= k;
            if isempty(template_list{i}(j).sWaveArrival) == 1
                template_list{i}(j) = [];
                k = k-1;
            elseif isempty(template_list{i}(j).pWaveArrival) == 1
                template_list{i}(j) = [];
                k = k-1;
            end
        end
    end
end
